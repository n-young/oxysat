"""
In four or so sentences, compare how quickly Forge is able
to find an instance for some spec from a previous homework
using your solver compared to the default one (with the above
line removed). You can find the solve time (time spent in
the actual SAT solver) in the debug information Forge prints
before launching Sterling. Note down what spec you used and
what the solve times were for a sat and unsat instance for
your solver and for the default one.
"""

NOTE: There is a README.md for some more information.

We ran our solver on the graph_coloring assignment from
Forge 2. In the SAT case, Forge natively runs in about
6 units, while ours runs in about 200 units. In the
UNSAT case, Forge runs in about 10 units, while ours
returned #f.

One cool thing is that when we optimized our variable
picking to pick the most frequently observed literal,
our solve time was cut 10x.
